// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: alohaio.proto

#ifndef PROTOBUF_INCLUDED_alohaio_2eproto
#define PROTOBUF_INCLUDED_alohaio_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_alohaio_2eproto 

namespace protobuf_alohaio_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_alohaio_2eproto
namespace alohaio {
class SystemCookie;
class SystemCookieDefaultTypeInternal;
extern SystemCookieDefaultTypeInternal _SystemCookie_default_instance_;
class UserCookie;
class UserCookieDefaultTypeInternal;
extern UserCookieDefaultTypeInternal _UserCookie_default_instance_;
}  // namespace alohaio
namespace google {
namespace protobuf {
template<> ::alohaio::SystemCookie* Arena::CreateMaybeMessage<::alohaio::SystemCookie>(Arena*);
template<> ::alohaio::UserCookie* Arena::CreateMaybeMessage<::alohaio::UserCookie>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace alohaio {

// ===================================================================

class SystemCookie : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:alohaio.SystemCookie) */ {
 public:
  SystemCookie();
  virtual ~SystemCookie();

  SystemCookie(const SystemCookie& from);

  inline SystemCookie& operator=(const SystemCookie& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SystemCookie(SystemCookie&& from) noexcept
    : SystemCookie() {
    *this = ::std::move(from);
  }

  inline SystemCookie& operator=(SystemCookie&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemCookie& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemCookie* internal_default_instance() {
    return reinterpret_cast<const SystemCookie*>(
               &_SystemCookie_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SystemCookie* other);
  friend void swap(SystemCookie& a, SystemCookie& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemCookie* New() const final {
    return CreateMaybeMessage<SystemCookie>(NULL);
  }

  SystemCookie* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SystemCookie>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SystemCookie& from);
  void MergeFrom(const SystemCookie& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemCookie* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 ret_code = 1;
  void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 ret_code() const;
  void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:alohaio.SystemCookie)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 ret_code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_alohaio_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserCookie : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:alohaio.UserCookie) */ {
 public:
  UserCookie();
  virtual ~UserCookie();

  UserCookie(const UserCookie& from);

  inline UserCookie& operator=(const UserCookie& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserCookie(UserCookie&& from) noexcept
    : UserCookie() {
    *this = ::std::move(from);
  }

  inline UserCookie& operator=(UserCookie&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCookie& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserCookie* internal_default_instance() {
    return reinterpret_cast<const UserCookie*>(
               &_UserCookie_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(UserCookie* other);
  friend void swap(UserCookie& a, UserCookie& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserCookie* New() const final {
    return CreateMaybeMessage<UserCookie>(NULL);
  }

  UserCookie* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserCookie>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserCookie& from);
  void MergeFrom(const UserCookie& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserCookie* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:alohaio.UserCookie)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_alohaio_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SystemCookie

// int32 ret_code = 1;
inline void SystemCookie::clear_ret_code() {
  ret_code_ = 0;
}
inline ::google::protobuf::int32 SystemCookie::ret_code() const {
  // @@protoc_insertion_point(field_get:alohaio.SystemCookie.ret_code)
  return ret_code_;
}
inline void SystemCookie::set_ret_code(::google::protobuf::int32 value) {
  
  ret_code_ = value;
  // @@protoc_insertion_point(field_set:alohaio.SystemCookie.ret_code)
}

// -------------------------------------------------------------------

// UserCookie

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace alohaio

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_alohaio_2eproto
